<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Docker 常用容器启动命令集合</title>
      <link href="2020/06/06/docker-chang-yong-rong-qi-qi-dong-ming-ling-ji-he.html"/>
      <url>2020/06/06/docker-chang-yong-rong-qi-qi-dong-ming-ling-ji-he.html</url>
      
        <content type="html"><![CDATA[<h1 id="Mongo"><a href="#Mongo" class="headerlink" title="Mongo"></a>Mongo</h1><pre class=" language-shell"><code class="language-shell">docker run -d -p 27017:27017 -v /$PWD/docker/mongo/db:/data/db --restart=always --name mymongo -e MONGO_INITDB_ROOT_USERNAME=admin -e MONGO_INITDB_ROOT_PASSWORD=admin mongo:latest</code></pre><h1 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a>Redis</h1><pre class=" language-shell"><code class="language-shell">docker run -d --name myredis -p 6379:6379 --restart=always redis --requirepass "redis"</code></pre><h1 id="MySql"><a href="#MySql" class="headerlink" title="MySql"></a>MySql</h1><pre class=" language-shell"><code class="language-shell">-- 主从搭建模式：Master:docker run -d -p 3306:3306 --privileged=true -v /$PWD/docker/mysql/master/data:/var/lib/mysql -v /$PWD/docker/mysql/master/conf/my.cnf:/etc/mysql/my.cnf --name mysql-master --restart=always -e MYSQL_ROOT_PASSWORD="root" mysql:latestSlave:docker run -d -p 3307:3306 --privileged=true -v /$PWD/docker/mysql/slave/data:/var/lib/mysql -v /$PWD/docker/mysql/slave/conf/my.cnf:/etc/mysql/my.cnf --name mysql-slave --restart=always -e MYSQL_ROOT_PASSWORD="root" mysql:latest</code></pre><pre class=" language-shell"><code class="language-shell"># my.cnf配置如下：[client]default-character-set = utf8mb4[mysql]default-character-set = utf8mb4[mysqld]character-set-client-handshake = FALSEcharacter-set-server = utf8mb4collation-server = utf8mb4_unicode_ci# 局域网唯一server-id=100## 开启二进制日志功能（关键）log-bin=mysql-binpid-file        = /var/run/mysqld/mysqld.pidsocket          = /var/run/mysqld/mysqld.sockdatadir         = /var/lib/mysqlsecure-file-priv= NULL# Disabling symbolic-links is recommended to prevent assorted security riskssymbolic-links=0# Custom config should go here!includedir /etc/mysql/conf.d/</code></pre><h1 id="Zookeeper"><a href="#Zookeeper" class="headerlink" title="Zookeeper"></a>Zookeeper</h1><pre class=" language-shell"><code class="language-shell">mac os :docker run -d --restart=always --log-driver json-file --log-opt max-size=100m --log-opt max-file=2  --name myzookeeper -p 2181:2181 -v /$PWD/docker/zookeeper/data:/data -e TZ=Asia/Shanghai wurstmeister/zookeeperunix:docker run -d --restart=always --log-driver json-file --log-opt max-size=100m --log-opt max-file=2  --name myzookeeper -p 2181:2181 -v /etc/localtime:/etc/localtime wurstmeister/zookeeper</code></pre><h1 id="Kafka"><a href="#Kafka" class="headerlink" title="Kafka"></a>Kafka</h1><pre class=" language-shell"><code class="language-shell">docker run -d --restart=always --log-driver json-file --log-opt max-size=100m --log-opt max-file=2 --name mykafka -p 9092:9092 -e KAFKA_BROKER_ID=0 -e KAFKA_ZOOKEEPER_CONNECT=127.0.0.1:2181/kafka -e KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092 -e KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092 -e TZ=Asia/Shanghai wurstmeister/kafka</code></pre><h1 id="Draw-io"><a href="#Draw-io" class="headerlink" title="Draw.io"></a>Draw.io</h1><pre class=" language-shell"><code class="language-shell">docker run -d -p 8081:8080 --restart=always --hostname=drawio --name mydrawio my-drawio</code></pre><h1 id="ElasticSearch-Kibana"><a href="#ElasticSearch-Kibana" class="headerlink" title="ElasticSearch + Kibana"></a>ElasticSearch + Kibana</h1><pre class=" language-shell"><code class="language-shell">docker run -d --restart=always -p 9200:9200 -p 9300:9300 --network esnet -e "discovery.type=single-node" -v /$PWD/docker/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml --name elasticsearch elasticsearch:7.9.1docker run -d --restart=always -p 5601:5601 --name kibana --network esnet --link elasticsearch:elasticsearch kibana:7.9.1</code></pre><h1 id="nextcloud"><a href="#nextcloud" class="headerlink" title="nextcloud"></a>nextcloud</h1><pre class=" language-shell"><code class="language-shell">docker run --restart=always --name nextcloud -p 10100:80 -v /usr/docker/nextcloud:/var/www/html/data -d nextcloud</code></pre><h1 id="gitlab"><a href="#gitlab" class="headerlink" title="gitlab"></a>gitlab</h1><pre class=" language-shell"><code class="language-shell">docker run -d -p 2443:443 -p 5678:80 -p 2222:22 --name gitlab --restart always -v /usr/docker/gitlab/config:/etc/gitlab -v /usr/docker/gitlab/logs:/var/log/gitlab -v /usr/docker/gitlab/data:/var/opt/gitlab docker.io/gitlab/gitlab-ce</code></pre><h1 id="gitlab-runner"><a href="#gitlab-runner" class="headerlink" title="gitlab-runner"></a>gitlab-runner</h1><pre class=" language-shell"><code class="language-shell">docker run -d --name gitlab-runner --restart always -v /usr/docker/gitlab-runner/config:/etc/gitlab-runner -v /usr/docker/gitlab-runner/docker.sock:/var/run/docker.sock gitlab/gitlab-runner:latest</code></pre><h1 id="gitlab-runner-docker-compose-yml"><a href="#gitlab-runner-docker-compose-yml" class="headerlink" title="gitlab+runner docker-compose yml"></a>gitlab+runner docker-compose yml</h1><pre class=" language-shell"><code class="language-shell">version: '3.2'services:    gitlab-web:        container_name: gitlab        image: docker.io/gitlab/gitlab-ce        restart: always        hostname: 'gitlab.adotcode.com'        environment:            GITLAB_OMNIBUS_CONFIG: |                external_url 'https://gitlab.adotcode.com:2443'                nginx['redirect_http_to_https'] = true                letsencrypt['enable'] = false                nginx['ssl_certificate'] = "/etc/gitlab/ssl/gitlab.adotcode.com.crt"                nginx['ssl_certificate_key'] = "/etc/gitlab/ssl/gitlab.adotcode.com.key"                gitlab_rails['time_zone'] = 'Asia/Shanghai'                gitlab_rails['gitlab_shell_ssh_port'] = 2222                # Add any other gitlab.rb configuration here, each on its own line        ports:            - '2443:2443'            - '2222:22'            - '5678:80'        volumes:            - /usr/docker/gitlab/config:/etc/gitlab            - /usr/docker/gitlab/logs:/var/log/gitlab            - /usr/docker/gitlab/data:/var/opt/gitlab            - /usr/docker/gitlab/ssl:/etc/gitlab/ssl        networks:            - gitlab-ce-network    gitlab-runner:        container_name: gitlab-runner-public        image: gitlab/gitlab-runner:latest        restart: always        depends_on:            - gitlab-web        volumes:            - /usr/docker/gitlab-runner-public/config:/etc/gitlab-runner            - /var/run/docker.sock:/var/run/docker.sock        network_mode: "host"networks:    gitlab-ce-network:        name: gitlab-ce-network# runner config.tomlconcurrent = 1check_interval = 0[session_server]  session_timeout = 1800[[runners]]  name = "gitlab runner public"  url = "https://gitlab.adotcode.com:2443/"  token = "Z-4kYz9QosxVWSHNjU5K"  executor = "docker"  [runners.custom_build_dir]  [runners.cache]    [runners.cache.s3]    [runners.cache.gcs]    [runners.cache.azure]  [runners.docker]    extra_hosts = ["gitlab.adotcode.com:192.168.1.6"]    tls_verify = false    image = "docker:19.03.12"    privileged = false    disable_entrypoint_overwrite = false    oom_kill_disable = false    disable_cache = false    volumes = ["/var/run/docker.sock:/var/run/docker.sock", "/cache"]    shm_size = 0 # 后台 启动sudo docker-compose up -d# 停止会删除容器docker-compose down# 停止不会删除容器docker-compose stop</code></pre><h1 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h1><pre class=" language-shell"><code class="language-shell">docker run -d --restart always --name nginx -p 80:80 -v /usr/docker/nginx/nginx.conf:/etc/nginx/nginx.conf -v /usr/docker/nginx/ssl:/etc/nginx/ssl -v /usr/docker/nginx/logs:/var/log/nginx -v /usr/docker/nginx/html:/usr/share/nginx/html -v /usr/docker/nginx/conf:/etc/nginx/conf.d --privileged=true nginx</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>java List 操作</title>
      <link href="2019/07/11/java-list-cao-zuo.html"/>
      <url>2019/07/11/java-list-cao-zuo.html</url>
      
        <content type="html"><![CDATA[<p>1 列表转换及字符串 joining</p><pre class=" language-java"><code class="language-java"> List<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span> pathCodes <span class="token operator">=</span> <span class="token punctuation">(</span>List<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span><span class="token punctuation">)</span> params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"pathCodes"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>String pathCodeLikeWhere <span class="token operator">=</span> pathCodes                <span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>obj <span class="token operator">-</span><span class="token operator">></span> String<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"Ancestor LIKE '%s%%'"</span><span class="token punctuation">,</span> obj<span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span>Collectors<span class="token punctuation">.</span><span class="token function">joining</span><span class="token punctuation">(</span><span class="token string">" OR "</span><span class="token punctuation">,</span> <span class="token string">"("</span><span class="token punctuation">,</span> <span class="token string">")"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 结果："(Ancestor LIKE 'xxx%' OR Ancestor LIKE 'xxxxx%')"</span></code></pre><h3 id=""><a href="#" class="headerlink" title=""></a></h3>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>发布自己的程序包到nuget.org</title>
      <link href="2019/06/12/fa-bu-zi-ji-de-cheng-xu-bao-dao-nuget.org.html"/>
      <url>2019/06/12/fa-bu-zi-ji-de-cheng-xu-bao-dao-nuget.org.html</url>
      
        <content type="html"><![CDATA[<h2 id="登录NuGet"><a href="#登录NuGet" class="headerlink" title="登录NuGet"></a>登录<a href="https://www.nuget.org/">NuGet</a></h2><p>没有账号自己注册</p><h2 id="申请-ApiKey"><a href="#申请-ApiKey" class="headerlink" title="申请 ApiKey"></a>申请 ApiKey</h2><p><img src="https://cdn.nlark.com/yuque/0/2019/png/105968/1560349730833-a8cc7ba2-3ffe-49fc-9397-8b641bf3e25a.png#align=left&display=inline&height=347&name=image.png&originHeight=1386&originWidth=2560&size=195033&status=done&width=640" alt="image.png"></p><h2 id="下载nuget-exe-配置环境变量"><a href="#下载nuget-exe-配置环境变量" class="headerlink" title="下载nuget.exe, 配置环境变量"></a>下载<a href="https://www.nuget.org/downloads">nuget.exe</a>, 配置环境变量</h2><p>在系统环境变量 path 中新增 nuget.exe 所在目录位置，如：D:\Tools\nuget<br>测试：在 cmd 中输入 nuget 回车 看看是否能识别</p><h2 id="设置-nuget-的-ApiKey"><a href="#设置-nuget-的-ApiKey" class="headerlink" title="设置 nuget 的 ApiKey"></a>设置 nuget 的 ApiKey</h2><p>为了能上传需要设置 apikey 上面所申请的 key<br>在 cmd 中输入命令 nuget setApiKey xxxxxxxxxxxxxxx 回车即可。</p><h2 id="发布包到-nuget-org"><a href="#发布包到-nuget-org" class="headerlink" title="发布包到 nuget.org"></a>发布包到 nuget.org</h2><p>在 cmd 中进入到在包所在目录中<br>输入命令   nuget push xxxxxx.nupkg -Source <a href="https://api.nuget.org/v3/index.json">https://api.nuget.org/v3/index.json</a> 回车 。</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
